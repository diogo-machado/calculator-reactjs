{"version":3,"sources":["components/Calculator/Controls/Button.js","components/Calculator/Controls/Operator.js","components/Calculator/Calculator.js","components/Calculator/Display/Display.js","components/Calculator/Controls/Dot.js","App.js","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Button","props","a","createElement","onClick","click","value","className","concat","classes","Operator","Calculator","_this","Object","E_Projects_React_calculator_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","E_Projects_React_calculator_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_Projects_React_calculator_reactjs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","updateDisplayHandler","state","displayVal","setState","prevState","console","log","numPressHandler","dotHandler","includes","operatorHandler","expression","slice","length","eval","react__WEBPACK_IMPORTED_MODULE_5___default","_Display_Display__WEBPACK_IMPORTED_MODULE_7__","_Controls_Operator__WEBPACK_IMPORTED_MODULE_9__","_Controls_Button__WEBPACK_IMPORTED_MODULE_8__","_Controls_Dot__WEBPACK_IMPORTED_MODULE_10__","Component","Display","Dot","App","react_default","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f9de93cc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Styles.css';\r\n\r\nconst Button = props => {\r\n  return (\r\n    <div onClick={() => props.click(props.value)} className={`btn ${props.classes}`}>\r\n      {props.value}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './Styles.css';\r\n\r\nconst Operator = props => {\r\n  return (\r\n    <div onClick={() => props.click(props.value)} className={`btn ${props.classes}`}>\r\n      {props.value}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Operator;\r\n","import React, { Component } from 'react';\r\nimport './Calculator.css';\r\nimport Display from './Display/Display';\r\nimport Button from './Controls/Button';\r\nimport Operator from './Controls/Operator';\r\nimport Dot from './Controls/Dot';\r\n\r\nexport default class Calculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expression: '',\r\n      displayVal: '0'\r\n    };\r\n  }\r\n\r\n  updateDisplayHandler = value => {\r\n    if (this.state.displayVal === '0' && value === '0') {\r\n      return;\r\n    } else if (this.state.displayVal === '0') {\r\n      this.setState(prevState => {\r\n        return { displayVal: value };\r\n      });\r\n      console.log('caso 1');\r\n    } else {\r\n      this.setState(prevState => {\r\n        return { displayVal: prevState.displayVal + value };\r\n      });\r\n      console.log('caso 2');\r\n    }\r\n  };\r\n\r\n  numPressHandler = value => {\r\n    this.updateDisplayHandler(value);\r\n  };\r\n\r\n  dotHandler = value => {\r\n    if (!this.state.displayVal.includes('.')) {\r\n      this.setState(prevState => {\r\n        return { displayVal: prevState.displayVal + '.' };\r\n      });\r\n    }\r\n  };\r\n\r\n  operatorHandler = value => {\r\n    switch (value) {\r\n      case 'AC':\r\n        this.setState(prevState => {\r\n          return { expression: '', displayVal: '0' };\r\n        });\r\n        break;\r\n      case 'โค':\r\n        this.setState(prevState => {\r\n          return { displayVal: prevState.displayVal.slice(0, prevState.displayVal.length - 1) };\r\n        });\r\n        break;\r\n      case '+':\r\n        this.setState(prevState => {\r\n          return {\r\n            expression: prevState.expression + prevState.displayVal + ' + ',\r\n            displayVal: '0'\r\n          };\r\n        });\r\n        break;\r\n      case '-':\r\n        this.setState(prevState => {\r\n          return {\r\n            expression: prevState.expression + prevState.displayVal + ' - ',\r\n            displayVal: '0'\r\n          };\r\n        });\r\n        break;\r\n      case 'x':\r\n        this.setState(prevState => {\r\n          return {\r\n            expression: prevState.expression + prevState.displayVal + ' * ',\r\n            displayVal: '0'\r\n          };\r\n        });\r\n        break;\r\n      case 'รท':\r\n        this.setState(prevState => {\r\n          return {\r\n            expression: prevState.expression + prevState.displayVal + ' / ',\r\n            displayVal: '0'\r\n          };\r\n        });\r\n        break;\r\n      case '=':\r\n        this.setState(prevState => {\r\n          return {\r\n            displayVal: eval(prevState.expression + ' ' + prevState.displayVal),\r\n            expression: ''\r\n          };\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calculator\">\r\n        <Display displayVal={this.state.displayVal} />\r\n\r\n        <Operator value=\"AC\" click={this.operatorHandler} classes={'btn-clear'} />\r\n        <Button value=\"&#8676;\" click={this.operatorHandler} />\r\n        <Operator value=\"&#247;\" click={this.operatorHandler} classes={'btn-operator'} />\r\n\r\n        <Button value=\"7\" click={this.numPressHandler} />\r\n        <Button value=\"8\" click={this.numPressHandler} />\r\n        <Button value=\"9\" click={this.numPressHandler} />\r\n        <Operator value=\"x\" click={this.operatorHandler} classes={'btn-operator'} />\r\n\r\n        <Button value=\"4\" click={this.numPressHandler} />\r\n        <Button value=\"5\" click={this.numPressHandler} />\r\n        <Button value=\"6\" click={this.numPressHandler} />\r\n        <Operator value=\"-\" click={this.operatorHandler} classes={'btn-operator'} />\r\n\r\n        <Button value=\"1\" click={this.numPressHandler} />\r\n        <Button value=\"2\" click={this.numPressHandler} />\r\n        <Button value=\"3\" click={this.numPressHandler} />\r\n        <Operator value=\"+\" click={this.operatorHandler} classes={'btn-operator'} />\r\n\r\n        <Button value=\"0\" click={this.numPressHandler} classes={'btn-zero'} />\r\n        <Dot value=\".\" click={this.dotHandler} />\r\n        <Operator value=\"=\" click={this.operatorHandler} classes={'btn-equals btn-operator'} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Display.css';\r\n\r\nconst Display = props => {\r\n  return <div className=\"display\">{props.displayVal}</div>;\r\n};\r\n\r\nexport default Display;\r\n","import React from 'react';\r\nimport './Styles.css';\r\n\r\nconst Dot = props => {\r\n  return (\r\n    <div onClick={() => props.click(props.value)} className={`btn ${props.classes}`}>\r\n      {props.value}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dot;\r\n","import React from 'react';\nimport './App.css';\nimport Calculator from './components/Calculator/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Calculator-ReactJS</h1>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}